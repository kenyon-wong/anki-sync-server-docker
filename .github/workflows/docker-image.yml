name: Build anki-sync-server Images

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - ".github/VERSION.txt"
  pull_request:
    branches: [ "master" ]
    paths:
      - ".github/VERSION.txt"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Extract the version from .github/VERSION.txt
      - name: Get Version
        id: get_version
        run: |
          version=$(cat .github/VERSION.txt | tr -d '[:space:]')
          echo "VERSION=${version}" >> $GITHUB_ENV        

      # Build the Docker image
      - name: Build the Docker image
        run: docker buildx build . --build-arg VERSION=${{ env.VERSION }} --file Dockerfile --tag anki_syncd:v${{ env.VERSION }}

      # Save the Docker image to a tar file
      - name: Save Docker image
        run: docker save -o anki_syncd_${{ env.VERSION }}.tar anki_syncd:v${{ env.VERSION }}

      # Push the Docker image to the registry
      - name: Push Docker image
        env:
          DOCKER_IMAGE: anki_syncd:v${{ env.VERSION }}
          GITEA_REPO: ${{ secrets.GITEA_SERVICE }}/${{ secrets.GITEA_USER }}/anki_syncd:v${{ env.VERSION }}
        run: |
          docker login -u ${{ secrets.GITEA_USER }} --password ${{ secrets.GITEA_TOKEN }} ${{ secrets.GITEA_SERVICE }}
          docker tag $DOCKER_IMAGE $GITEA_REPO
          docker push $GITEA_REPO

      # Upload the Docker image tar file as an artifact
      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: anki_syncd_${{ env.VERSION }}.tar
