name: Build the Docker images

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        run: |
          if [ ! -f .github/version ]; then
            echo "Error: Version file not found!"
            exit 1
          fi
          version=$(cat .github/version)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "Anki Releases Version: ${version}"

      - name: Build the Docker image
        run: |
          docker buildx build \
            . \
            --file Dockerfile \
            --build-arg ANKI_VERSION=${{ env.VERSION }} \
            --tag anki_syncd:v${{ env.VERSION }}

      - name: Save Docker image
        run: |
          docker save \
            -o anki_syncd_v${{ env.VERSION }}.tar \
            anki_syncd:v${{ env.VERSION }}

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: anki_syncd_v${{ env.VERSION }}.tar
          path: anki_syncd_v${{ env.VERSION }}.tar

      - name: Log into registry ${{ env.GITEA_SERVICE }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.GITEA_SERVICE  }}
          username: ${{ github.GITEA_USER }}
          password: ${{ secrets.GITEA_TOKEN }}

      - name: Push Docker image
        env:
          DOCKER_IMAGE: anki_syncd:v${{ env.VERSION }}
          GITEA_REPO: ${{ secrets.GITEA_SERVICE }}/${{ secrets.GITEA_USER }}/anki_syncd:v${{ env.VERSION }}
        run: |
          docker tag $DOCKER_IMAGE $GITEA_REPO
          docker push $GITEA_REPO
          